@model AvaKids_188269.Models.Pagination.Pagination;
@{
    int currentPage = Model.currentPage;
    int countPages = Model.countPages;
    var generateUrl = Model.generateUrl;
    if (currentPage > countPages)
        currentPage = countPages;

    if (countPages <= 1) return;


    int? preview = null;
    int? next = null;

    if (currentPage > 1)
        preview = currentPage - 1;

    if (currentPage < countPages)
        next = currentPage + 1;

    // Các trang hiện thị trong điều hướng
    List<int> pagesRanges = new List<int>();


    int delta = 5; // Số trang mở rộng về mỗi bên trang hiện tại
    int remain = delta * 2; // Số trang hai bên trang hiện tại

    pagesRanges.Add(currentPage);
    // Các trang phát triển về hai bên trang hiện tại
    for (int i = 1; i <= delta; i++)
    {
        if (currentPage + i <= countPages)
        {
            pagesRanges.Add(currentPage + i);
            remain--;
        }

        if (currentPage - i >= 1)
        {
            pagesRanges.Insert(0, currentPage - i);
            remain--;
        }

    }
    // Xử lý thêm vào các trang cho đủ remain
    //(xảy ra ở đầu mút của khoảng trang không đủ trang chèn vào)
    if (remain > 0)
    {
        if (pagesRanges[0] == 1)
        {
            for (int i = 1; i <= remain; i++)
            {
                if (pagesRanges.Last() + 1 <= countPages)
                {
                    pagesRanges.Add(pagesRanges.Last() + 1);
                }
            }
        }
        else
        {
            for (int i = 1; i <= remain; i++)
            {
                if (pagesRanges.First() - 1 > 1)
                {
                    pagesRanges.Insert(0, pagesRanges.First() - 1);
                }
            }
        }
    }
}
<div id="paging">
    <div class="pagbreak fInter" data-total-page="4">
        @if (preview != null)
        {
            <a href="@generateUrl(preview)" id="_pgPreviousPage" class="button-pagbreak button-pagbreak-prev disabled"
            data-page="0">
            </a>
        }
        else
        {
            <a href="#" id="_pgPreviousPage" class="button-pagbreak button-pagbreak-prev disabled" data-page="0"></a>
        }
        @foreach (var pageitem in pagesRanges)
        {
            if (pageitem != currentPage)
            {
                <a href="@generateUrl(pageitem)" class="page-item" data-page="2">@pageitem</a>
            }
            else
            {
                <a href="#" class="page-item" data-page="2">@pageitem<span class="sr-only">(current)</span></a>

            }
        }
        @if (next != null)
        {
            <a href="@generateUrl(next)" class="button-pagbreak button-pagbreak-next " id="_pgNextPage" data-page="2"></a>
        }
        else
        {
            <a href="#" class="button-pagbreak button-pagbreak-next " id="_pgNextPage" data-page="2"></a>

        }
    </div>
</div>